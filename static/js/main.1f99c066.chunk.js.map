{"version":3,"sources":["redux/createStore.js","reducers/index.js","redux/store.js","redux/combineReducers.js","Components/ToDo.js","Components/ToDoList.js","Components/AddToDo.js","Components/FilterLink.js","Components/Footer.js","Components/ToDoApp.js","index.js"],"names":["createStore","reducer","store","listeners","dispatch","action","forEach","listener","getState","subscribe","push","filter","l","ACTIONS_TYPE","todo","state","type","id","text","completed","Object","objectSpread","reducers","arguments","length","undefined","keys","reduce","nextState","key","combineReducers","todos","concat","toConsumableArray","map","visibilityFilter","ToDo","_ref","onClick","react_default","a","createElement","style","textDecoration","cursor","ToDoList","visibleToDos","handleClick","_ref2","Components_ToDo","AddToDo","input","onAddClick","Fragment","ref","node","value","focus","FilterLink","children","currentFilter","onFilterClick","href","e","preventDefault","Footer","Components_FilterLink","FILTERS","SHOW_ALL","SHOW_ACTIVES","SHOW_COMPLETED","nextToDoId","getVisibleToDos","t","ToDoApp","Components_AddToDo","Components_ToDoList","Components_Footer","console","log","render","ReactDOM","Components_ToDoApp","document","getElementById"],"mappings":"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","file":"static/js/main.1f99c066.chunk.js","sourcesContent":["const createStore = reducer => {\n    let store;\n    let listeners = [];\n\n    const getState = () => store;\n\n    const dispatch = action => {\n        store = reducer(store, action);\n        listeners.forEach(listener => listener());\n    };\n\n    dispatch({});\n\n    const subscribe = listener => {\n\n        listeners.push(listener);\n\n        return () => {\n            listeners = listeners.filter(l => l !== listener);\n        };\n    };\n    return { getState, dispatch, subscribe };\n};\n\nexport default createStore;","import combineReducers from \"../redux/combineReducers\";\n\nexport const ACTIONS_TYPE = {\n  ADD_TODO: \"ADD_TODO\",\n  TOGGLE_TODO: \"TOGGLE_TODO\",\n  SHOW_ALL: \"SHOW_ALL\",\n  SET_VISIBILITY_FILTER: \"SET_VISIBILITY_FILTER\"\n};\n\nconst todo = (state, action) => {\n  switch (action.type) {\n    case ACTIONS_TYPE.ADD_TODO:\n      return {\n        id: action.id,\n        text: action.text,\n        completed: false\n      };\n    case ACTIONS_TYPE.TOGGLE_TODO:\n      if (state.id !== action.id) {\n        return state;\n      }\n      return {\n        ...state,\n        completed: !state.completed\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const todos = (state = [], action) => {\n  switch (action.type) {\n    case ACTIONS_TYPE.ADD_TODO:\n      return [...state, todo(state, action)];\n    case ACTIONS_TYPE.TOGGLE_TODO:\n      return state.map(state => todo(state, action));\n    default:\n      return state;\n  }\n};\n\nconst visibilityFilter = (state = \"SHOW_ALL\", action) => {\n  switch (action.type) {\n    case ACTIONS_TYPE.SET_VISIBILITY_FILTER:\n      return action.filter;\n    default:\n      return state;\n  }\n};\n\nconst toDoApp = combineReducers({\n  todos,\n  visibilityFilter\n});\n\nexport default toDoApp;\n","import createStore from \"./createStore\";\nimport toDoApp from \"../reducers\";\n\nexport default createStore(toDoApp);","const combineReducers = reducers => {\n  return (state = {}, action) =>\n    Object.keys(reducers).reduce((nextState, key) => {\n      nextState[key] = reducers[key](state[key], action);\n      return nextState;\n    }, {});\n};\n\nexport default combineReducers;\n","import React from \"react\";\n\nconst ToDo = ({ onClick, completed, text }) => {\n  return (\n    <li\n      onClick={onClick}\n      style={{\n        textDecoration: completed ? \"line-through\" : \"none\",\n        cursor: \"pointer\"\n      }}\n    >\n      {text}\n    </li>\n  );\n};\n\nexport default ToDo;\n","import React from \"react\";\nimport ToDo from \"./ToDo\";\n\nconst ToDoList = ({ visibleToDos, handleClick }) => {\n  return (\n    <ol>\n      {visibleToDos.map(({id, completed, text}) => (\n        <ToDo\n          key={id}\n          onClick={() => handleClick(id)}\n          completed={completed}\n          text={text}\n        />\n      ))}\n    </ol>\n  );\n};\n\nexport default ToDoList;\n","import React from 'react';\n\nconst AddToDo = ({onAddClick}) => {\n    let input;\n    return (\n        <>\n            <input type=\"text\" ref={node => (input = node)} />\n            <button\n                onClick={() => {\n                    if (input.value) {\n                        onAddClick(input.value);\n                        input.value = \"\";\n                        input.focus();\n                    }\n                }}\n            >\n                Add ToDos\n            </button>\n        </>\n    );\n};\n\nexport default AddToDo;\n","import React from \"react\";\n\nconst FilterLink = ({ filter, children, currentFilter, onFilterClick }) => {\n  if (currentFilter === filter) {\n    return <span>{children}</span>;\n  }\n  return (\n    <a\n      href=\"/#\"\n      onClick={e => {\n        e.preventDefault();\n        onFilterClick(filter)\n      }}\n    >\n      {children}\n    </a>\n  );\n};\n\nexport default FilterLink;\n","import React from 'react';\nimport FilterLink from \"./FilterLink\";\nimport {FILTERS} from \"./ToDoApp\";\n\nconst Footer = ({visibilityFilter, onFilterClick}) => {\n    return (\n        <p>\n            Show:\n            {\"  \"}\n            <FilterLink\n                filter={FILTERS.SHOW_ALL}\n                currentFilter={visibilityFilter}\n                onFilterClick={onFilterClick}\n            >\n                All\n            </FilterLink>\n            {\"  \"}\n            <FilterLink\n                filter={FILTERS.SHOW_ACTIVES}\n                currentFilter={visibilityFilter}\n                onFilterClick={onFilterClick}\n            >\n                Actives\n            </FilterLink>\n            {\"  \"}\n            <FilterLink\n                filter={FILTERS.SHOW_COMPLETED}\n                currentFilter={visibilityFilter}\n                onFilterClick={onFilterClick}\n            >\n                Completed\n            </FilterLink>\n        </p>\n    );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { ACTIONS_TYPE } from \"../reducers\";\nimport store from \"../redux/store\";\nimport ToDoList from \"./ToDoList\";\nimport AddToDo from \"./AddToDo\";\nimport Footer from \"./Footer\";\n\nexport const FILTERS = {\n  SHOW_ALL: \"SHOW_ALL\",\n  SHOW_ACTIVES: \"SHOW_ACTIVES\",\n  SHOW_COMPLETED: \"SHOW_COMPLETED\"\n};\nlet nextToDoId = 2;\n\nconst getVisibleToDos = (todos, filter) => {\n  switch (filter) {\n    case FILTERS.SHOW_COMPLETED:\n      return todos.filter(t => t.completed);\n    case FILTERS.SHOW_ACTIVES:\n      return todos.filter(t => !t.completed);\n    default:\n      return todos;\n  }\n};\n\nconst ToDoApp = ({ todos, visibilityFilter }) => (\n  <div>\n    <AddToDo\n      onAddClick={text => {\n        store.dispatch({\n          type: ACTIONS_TYPE.ADD_TODO,\n          text,\n          id: ++nextToDoId\n        });\n      }}\n    />\n    <ToDoList\n      handleClick={id => {\n        store.dispatch({\n          type: ACTIONS_TYPE.TOGGLE_TODO,\n          id\n        });\n      }}\n      visibleToDos={getVisibleToDos(todos, visibilityFilter)}\n    />\n    <Footer\n      visibilityFilter={visibilityFilter}\n      onFilterClick={filter =>\n        store.dispatch({\n          type: ACTIONS_TYPE.SET_VISIBILITY_FILTER,\n          filter\n        })\n      }\n    />\n  </div>\n);\n\nexport default ToDoApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./redux/store\"\nimport ToDoApp from \"./Components/ToDoApp\";\n\nconsole.log(store.getState());\n\nconst render = () => {\n  ReactDOM.render(<ToDoApp {...store.getState()} />, document.getElementById(\"root\"));\n};\n\n\nstore.subscribe(render);\nrender();\n\n\n\n\n\n\n\n\n\n\n\n// const toDoApp = (state = {}, action) => {\n//   return {\n//       todos: todos(state.todos, action),\n//       visibilityFilter: visibilityFilter(state.visibilityFilter, action)\n//   };\n// };"],"sourceRoot":""}